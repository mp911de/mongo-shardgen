#!/bin/bash

# mongos - Startup script for mongos

# chkconfig: 35 85 15
# description: Mongo is a scalable, document-oriented database.
# processname: mongos
# config: (INSTANCEDIR)/mongos.conf
# pidfile:  (INSTANCEDIR)/mongos.pid

### BEGIN INIT INFO
# Provides: $mongod
# Required-Start: $local_fs $network
# Required-Stop: $local_fs $network
# Default-Start:  3 4 5
# Default-Stop: 0 1 6
# Short-Description: Mongo is a scalable, document-oriented database.
# Description: Mongo is a scalable, document-oriented database.
### END INIT INFO

. /etc/rc.d/init.d/functions

# things from mongod.conf get there by mongod reading it


# NOTE: if you change any OPTIONS here, you get what you pay for:
# this script assumes all options are in the config file.
INSTANCE=$(basename $0)
MONGO_BASE_DIR=/opt/hadoop/mongo
INSTANCE_DIR=${MONGO_BASE_DIR}/${INSTANCE}

CONFIGFILE="${INSTANCE_DIR}/mongod.conf"
PID_FILE=${INSTANCE_DIR}/mongod.pid
OPTIONS=" --quiet --config ${INSTANCE_DIR}/mongos.conf --pidfilepath ${PID_FILE}"
LOCKFILE="/var/lock/subsys/${INSTANCE}"

mongos="${MONGO_BASE_DIR}/bin/mongos"

MONGO_USER=mongo
MONGO_GROUP=mongo

if [ `touch ${INSTANCE_DIR}/testfile 2> /dev/null; echo "$?"` -eq 0 ]; then
	OK=1
	rm ${INSTANCE_DIR}/testfile
else
	echo "FAIL: Insufficent permissions"
	exit 1
fi

# Handle NUMA access to CPUs (SERVER-3574)
# This verifies the existence of numactl as well as testing that the command works
NUMACTL_ARGS="--interleave=all"
if which numactl >/dev/null 2>/dev/null && numactl $NUMACTL_ARGS ls / >/dev/null 2>/dev/null
then
    NUMACTL="numactl $NUMACTL_ARGS"
else
    NUMACTL=""
fi

start()
{
  # Recommended ulimit values for mongod or mongos
  # See http://docs.mongodb.org/manual/reference/ulimit/#recommended-settings
  #
  ulimit -f unlimited
  ulimit -t unlimited
  ulimit -v unlimited
  ulimit -n 64000
  ulimit -m unlimited
  ulimit -u 32000

  echo -n $"Starting mongos ${INSTANCE}: "
  daemon --user "$MONGO_USER" "$NUMACTL $mongos $OPTIONS >/dev/null 2>&1"
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && touch ${LOCKFILE}
}

stop()
{
  echo -n $"Stopping mongos ${INSTANCE}: "
  killproc -p "${PID_FILE}" -d 300 ${mongos}
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && rm -f ${LOCKFILE}
}

restart () {
	stop
	start
}


RETVAL=0

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart|reload|force-reload)
    restart
    ;;
  condrestart)
    [ -f ${LOCKFILE} ] && restart || :
    ;;
  status)
    status $mongos
    RETVAL=$?
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart}"
    RETVAL=1
esac

exit $RETVAL